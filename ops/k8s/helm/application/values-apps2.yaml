##### APPLICATIONS

apps:
###################################
####### DEMO APP ###########
###################################
  demo:
    name: demo
    image:
      repository: ghcr.io/grzegorzgr/demo
      # tag: demo

    podAnnotations: {}

    service:
      type: ClusterIP
      port: 8080

    extraEnv:
    - name: ETCD_ENDPOINT
      value: "http://etcd-main:2379"
    - name: SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL
      value: "PLAINTEXT"
    - name: KAFKA_BROKER
      value: "kafka-headless:9092"
    - name: KAFKA_SCHEMA_REGISTRY
      value: "http://schema-registry-svc:8081"
    - name: PETSTORE_URL
      value: "http://petstore-stub-svc:8080"
    - name: SFDC_AUTHENTICATED_HOST
      value: "http://sfdc-stub-svc:8080"

    resources:
      limits:
        cpu: 250m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi

    volumes: []
      # - name: server-certs
      #   secretName: api-gateway
      #   mountPath: /opt/certs/api-gateway
      #   optional: false

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 6
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    imagePullSecrets:
    - name: regcred
    nodeSelector: {}
    tolerations: []
    affinity: {}

###################################
####### ERROR-HANDLING APP ##############
###################################
  errorhandling:
    name: error-handling
    image:
      repository: ghcr.io/grzegorzgr/error-handling
      # tag: error-handling

    podAnnotations: {}

    service:
      type: ClusterIP
      port: 8080

    extraEnv:
    - name: ETCD_ENDPOINT
      value: "http://etcd-main:2379"
    - name: SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL
      value: "PLAINTEXT"
    - name: KAFKA_BROKER
      value: "kafka-headless:9092"
    - name: KAFKA_SCHEMA_REGISTRY
      value: "http://schema-registry-svc:8081"

    ### TODO - customized envFrom to load values for etcd and kafka on-demand
    # dependencies:
    #   - kafka
    #   - etcd

    ###

    resources:
      limits:
        cpu: 250m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi

    volumes:
      - name: mtls-certs1
        secretName: mtls-certs1
        mountPath: /opt/certs/mtls1
        optional: false

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 6
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    imagePullSecrets:
    - name: regcred
    nodeSelector: {}
    tolerations: []
    affinity: {}

###################################
####### CAMUNDA APP ##############
###################################
  camunda:
    name: camunda
    image:
      repository: ghcr.io/grzegorzgr/camunda
      # tag: dummy

    podAnnotations: {}

    service:
      type: ClusterIP
      port: 8080

    extraEnv:
    - name: ETCD_ENDPOINT
      value: "http://etcd-main:2379"
    - name: SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL
      value: "PLAINTEXT"
    - name: KAFKA_BROKER
      value: "kafka-main-headless:9092"
    - name: KAFKA_SCHEMA_REGISTRY
      value: "http://schema-registry-svc:8081"

    ### TODO - customized envFrom to load values for etcd and kafka on-demand
    # dependencies:
    #   - kafka
    #   - etcd

    ###

    resources:
      limits:
        cpu: 500m
        memory: 1024Mi
      requests:
        cpu: 250m
        memory: 512Mi

    volumes: []

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 6
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    imagePullSecrets:
    - name: regcred
    nodeSelector: {}
    tolerations: []
    affinity: {}